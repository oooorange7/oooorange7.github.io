[{"title":"11/26高数笔记","path":"/2024/11/26/1126高数笔记/","content":"积分 的求解方法 一、三角函数代换法 （一）代换过程 我们通过令 来进行代换。之所以选择正切函数进行代换，是因为当对 做这样的代换后， 的形式能够借助三角函数的恒等式进行化简，从而简化积分运算。 当 时，依据求导公式，可得 。 此时，来看被积函数中的 部分，将 代入可得： 这样，原积分 就转变为： （二）求解 对于 的求解，我们采用如下技巧： 令 ，那么 。 所以： 再把 代回，就得到： （三）代换回原变量 因为之前做了代换 ，所以 。 又根据三角函数关系 ，可得： 那么： 简化后： 由于 是常数，可并入到常数 中，所以通过三角函数代换法得到原积分的结果为： 二、双曲函数代换法 （一）代换过程 这次我们选择令 进行代换。双曲函数在处理一些含有类似 形式的积分时，也能起到很好的化简作用。 当 时，。 将 代入 可得： 于是，原积分 变为： （二）求解 很简单，。 （三）代换回原变量 因为做了代换 ，所以 ，那么 。 所以通过双曲函数代换法得到原积分的结果为： 三、关于积分 的分析 （一）利用分部积分法 设 ，，则 ，。 根据分部积分公式 ，可得： （二）对 进行处理 将 写成 ，则： 进一步展开得： 其中： （三）得到递推关系 由上述结果可得： 移项解出 ，得： （四）对于 当 时，。 根据基本积分公式：","tags":["数学"],"categories":["数学笔记"]},{"title":"Javascript Test","path":"/2024/11/19/JavaScript-Test/","content":""},{"title":"泡泡膜什么时候破？","path":"/2024/11/15/思考题：泡泡膜什么时候破？/","content":"思考题：泡泡膜什么时候破？ 两个圆环之间的肥皂泡形成的曲面叫悬链面（catenoid）。它是由悬链线（catenola） 绕轴旋转形成的。当两个圆环之间的距离太远时，因为上述曲面不存在，泡泡会破。在计算机的帮助下，求泡泡破掉的那一刻，圆环之间的距离和圆环半径之比大约是多少？ 在悬链线公式 中， 仅与重力和泡泡膜材质有关，本题不考虑表面张力等另外元素，故令 . 画出 的图像，任选一点 ，作 关于 轴的对称点 ，连结 ，过 作 轴的垂线 . 1 其中， 即为两圆环之间的距离， 即为圆环半径长。在实际情况下， 不变，变化的是 . 因为 , 为简便运算，我们讨论 的性质. 对 求导获得图像 ： 2 由上图可知， 在 时有最小值. 所以 在 时取得最大值 . 在实际情况中，两圆环被分开时，两圆环间距离与圆环半径的比值越来越大，即 越来越大，但无法大于最大值 ，否则泡泡破裂。换句话说，当泡泡膜的截面形状在悬链线 中无法找到时，这个泡泡膜不存在。","tags":["数学"],"categories":["数学思考题"]},{"title":"Hello World","path":"/2024/09/12/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment"},{"path":"/about/about.html","content":"我的个人信息 这里是你自己的个人信息页面，包含关于你的一些介绍和联系方式等内容。 YuanCheng Tian tianych2024@shanghaitech.edu.cn ; oooorange7tian@outlook.com Bachelor of Engineering in Electronic Engineering (Expected June 2028) School of Information Science and Technology ShanghaiTech University \\(There\\;is\\;a\\;negligible\\;beginning\\;in\\;all\\;great\\;action\\;and\\;thought.*\\)"},{"title":"About me","path":"/about/index.html","content":"YuanCheng Tian tianych2024@shanghaitech.edu.cn ; oooorange7tian@outlook.com Bachelor of Engineering in Electronic Engineering (Expected June 2028) School of Information Science and Technology ShanghaiTech University"},{"path":"/cards/cards.html","content":"/* 设置整体页面背景色（默认的浅色背景） */ /* 默认的背景色为浅色 */ #my-card { background-color: #ffffff; padding: 10px 20px; /* 适当减小内边距 */ border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); max-width: 900px; margin: 40px auto; /* 居中显示 */ display: flex; flex-direction: column; /* 子元素垂直排列 */ justify-content: flex-start; /* 确保内容紧贴顶部 */ height: auto; /* 高度自适应 */ } #my-card p { margin: 0 0 10px 0; /* 行间距为 10px */ padding: 0; } /* SVG 部分的样式 */ #my-svg svg { background-color: rgba(255, 255, 255, 1); /* 保证背景为白色 */ width: 100%; /* 宽度自适应 */ height: auto; /* 高度根据内容自适应，保持比例 */ display: block; /* 防止 SVG 元素底部有空隙，通常是 inline 元素 */ margin: 0; /* 确保没有额外的外边距 */ } /* 文本样式 */ #my-svg .text { font-size: 12px; fill: black; /* 默认黑色文字 */ } /* 线条样式 */ #my-svg .line { stroke: black; stroke-width: 0.5px; stroke-linecap: round; } #my-svg svg { background-color: rgba(255, 255, 255, 1); /* 浅色背景 */ } /* 线条样式 */ #my-svg #image .line { fill: none; stroke: rgba(0, 0, 0, 1); opacity: .7; stroke-miterlimit: 10; stroke-width: 0.5px; stroke-linecap: round; } #my-svg #image .bg { height: 250px; } /* 文本样式 */ #my-svg #detail .text { font-size: 12px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } #my-svg #contact .item .icon { width: 16px; height: 16px; } #my-svg #contact .item .text { font-size: 10px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } #my-svg #quote .text { font-size: 10px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } Cards 欢迎 🎉 今天是 11 月 18 日，星期一 也是 2024 年的第 322 天 与 Ta 恋爱已经 1803 天 从此万里路 不再崎岖漫长✨✨ // 获取当前日期 const currentDate = new Date(); // 获取当前日期的年月日 const year = currentDate.getFullYear(); const month = currentDate.getMonth(); // 0-11, 注意需要加1来得到实际月份 const day = currentDate.getDate(); const weekDay = currentDate.getDay(); // 星期几：0=周日, 1=周一,..., 6=周六 // 星期的字符串映射 const weekdays = [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"]; // 获取今年的第几天 const startOfYear = new Date(year, 0, 0); const diff = currentDate - startOfYear; // 毫秒差值 const dayOfYear = Math.floor(diff / (1000 * 60 * 60 * 24)); // 转换为天数 // 设定恋爱纪念日（假设为 2019-05-01） const loveDate = new Date('2019-12-12'); const loveDiff = currentDate - loveDate; // 计算恋爱开始的天数差 const loveDays = Math.floor(loveDiff / (1000 * 60 * 60 * 24)); // 转换为天数 // 更新 SVG 中的文本内容 document.getElementById('today-date').textContent = `今天是 ${month + 1} 月 ${day} 日，${weekdays[weekDay]}`; document.getElementById('day-of-year').textContent = `也是 ${year} 年的第 ${dayOfYear} 天`; document.getElementById('love-days').textContent = `与 Ta 恋爱已经 ${loveDays} 天`;"},{"path":"/js/index.js","content":"// Original code by Xecades // Modified code © 2021 - 2024 YangguangZhou (GitHub: YangguangZhou) const moment = require(\"moment\"); const request = require(\"request\"); const fs = require(\"fs\"); var param; const prefix = \"http://cards.jerryz.com.cn\"; const offset = [0, -0.75, 1.75, 0, 2.7, 4.8]; const icons = [\"wechat\", \"qq\", \"site\", \"phone\", \"email\", \"github\", \"gitee\", \"coolapk\", \"bilibili\", \"zhihu\", \"weibo\", \"tiktok\", \"twitter\", \"telegram\", \"facebook\", \"instagram\", \"google\", \"microsoft\", \"luogu\", \"codeforces\", \"alipay\", \"csdn\", \"douban\", \"taobao\", \"linuxdo\"]; function getParam(str) { return trans(param.get(str)); } function trans(text) { if (text) return text .replace(/{%amp%}/gm, \"&amp;\") .replace(/{%lt%}/gm, \"&lt;\") .replace(/{%gt%}/gm, \"&gt;\") return text; } function getBG() { var ret = 1; if (getParam(\"img\") && +getParam(\"img\") >= 1 && +getParam(\"img\") { request({ url: url, encoding: \"binary\" }, function (err, resp, body) { if (!err && resp.statusCode == 200) resolve('data:image/png;base64,' + Buffer.from(body, 'binary').toString('base64')); else reject(err); }); }); } function readSVG(url) { return new Promise((resolve, reject) => { request(url, function (err, resp, body) { if (!err && resp.statusCode == 200) resolve('data:image/svg+xml;base64,' + Buffer.from(body, 'utf8').toString('base64')); else reject(err); }); }); } async function getSocial() { var can = []; var ret = \"\"; for (var key of param.keys()) if (icons.includes(key)) can.push(key); var margin = 25; var sp = (175 - margin) / can.length; for (var i = 0; i < can.length; i++) { ret += ` ${getParam(can[i])} `; } return ret; } function getDur() { var date = getParam(\"date\") || \"\"; if (date == \"\") date = `${moment().year()}-12-31`; var ret = -moment().diff(date, 'days') var today = moment(new Date()).format('YYYY-MM-DD') if (date == today) return `还有 0 天`; else if (ret >= 0) return `还有 ${ret + 1} 天`; else return `已经 ${-ret} 天`; } function getStr() { var date = getParam(\"date\") || \"\"; if (getParam(\"str\")) return getParam(\"str\"); if (date == \"\") return ` ${moment().year()} 年末`; return \"某个特殊日期\"; } function getWeekday() { var ret = \"\"; switch (+moment().format(\"d\")) { case 0: ret = \"星期日\"; break; case 1: ret = \"星期一\"; break; case 2: ret = \"星期二\"; break; case 3: ret = \"星期三\"; break; case 4: ret = \"星期四\"; break; case 5: ret = \"星期五\"; break; case 6: ret = \"星期六\"; break; } return ret; } async function getCounter(req) { const url = \"https://counter-sever.jerryz.com.cn/counter\"; const { default: fetch } = await import('node-fetch'); const name = getParam(\"counter\"); //const headers = req && req.headers ? req.headers : {}; //const ip = req.headers['x-forwarded-for'] || req.headers['x-real-ip'] || req.connection.remoteAddress; const result = await (await fetch(url, { method: 'POST', headers: { 'Content-Type': 'application/json', }, body: JSON.stringify({ name }), })).json(); const counterView = result.times; return counterView; } module.exports = async (req, res) => { if (!req.url.includes(\"Jerry Zhou\")) console.log(\"[Running] \" + decodeURI(req.url)); moment.locale(\"zh-cn\"); param = new URLSearchParams(req.url.split(\"/api\")[1]); const counter = await getCounter(); res.setHeader(\"Content-Type\", \"image/svg+xml\"); const { background = await readImage(`${prefix}/res/bg/${getBG()}.png`), bg_offset = 250 - getBGOffset(), socialText = await getSocial(), dayOfYear = moment().dayOfYear() - 1, year = moment().year(), month = moment().format('M'), day = moment().format('D'), weekday = getWeekday(), toStr = getStr(), toDur = getDur(), quote_ = getParam(\"quote\") || \"永远相信美好的事情即将发生✨\", fontColor = \"rgba(\" + (getParam(\"color\") || \"0,0,0,1\") + \")\", bgColor = \"rgba(\" + (getParam(\"bg\") || \"0,0,0,0\") + \")\", welcomeText = counter ? `欢迎您，第 ${counter} 位访问本页面的朋友 🎉` : '欢迎您朋友 🎉' } = req.query; res.send(` svg {background-color: ${bgColor}; } #image .line { fill: none; stroke: ${fontColor}; opacity: .7; stroke-miterlimit: 10; stroke-width: 0.5px; stroke-linecap: round; } #image .bg { height: 250px; } #detail .text { font-size: 12px; fill: ${fontColor}; font-weight: lighter; } #contact .item .icon { width: 16px; height: 16px; } #contact .item .text { font-size: 10px; fill: ${fontColor}; font-weight: lighter; } #quote .text { font-size: 10px; fill: ${fontColor}; font-weight: lighter; } Cards | Jerry Zhou ${welcomeText} 今天是 ${month} 月 ${day} 日，${weekday} 也是 ${year} 年的第 ${dayOfYear} 天 ${toStr}${toDur} ${quote_} ${socialText} `); };"},{"title":"social","path":"/social/index.html","content":"/* 设置整体页面背景色（默认的浅色背景） */ /* 默认的背景色为浅色 */ #my-card { background-color: #ffffff; padding: 10px 20px; /* 适当减小内边距 */ border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); max-width: 900px; margin: 40px auto; /* 居中显示 */ display: flex; flex-direction: column; /* 子元素垂直排列 */ justify-content: flex-start; /* 确保内容紧贴顶部 */ height: auto; /* 高度自适应 */ } #my-card p { margin: 0 0 10px 0; /* 行间距为 10px */ padding: 0; } /* SVG 部分的样式 */ #my-svg svg { background-color: rgba(255, 255, 255, 1); /* 保证背景为白色 */ width: 100%; /* 宽度自适应 */ height: auto; /* 高度根据内容自适应，保持比例 */ display: block; /* 防止 SVG 元素底部有空隙，通常是 inline 元素 */ margin: 0; /* 确保没有额外的外边距 */ } /* 文本样式 */ #my-svg .text { font-size: 12px; fill: black; /* 默认黑色文字 */ } /* 线条样式 */ #my-svg .line { stroke: black; stroke-width: 0.5px; stroke-linecap: round; } #my-svg svg { background-color: rgba(255, 255, 255, 1); /* 浅色背景 */ } /* 线条样式 */ #my-svg #image .line { fill: none; stroke: rgba(0, 0, 0, 1); opacity: .7; stroke-miterlimit: 10; stroke-width: 0.5px; stroke-linecap: round; } #my-svg #image .bg { height: 250px; } /* 文本样式 */ #my-svg #detail .text { font-size: 12px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } #my-svg #contact .item .icon { width: 16px; height: 16px; } #my-svg #contact .item .text { font-size: 10px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } #my-svg #quote .text { font-size: 10px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } Cards 欢迎来到oooorange的博客！ 🎉 今天是 11 月 18 日，星期一 也是 2024 年的第 322 天 与 Ta 恋爱已经 1803 天 从此万里路 不再崎岖漫长✨✨ // 获取当前日期 const currentDate = new Date(); // 获取当前日期的年月日 const year = currentDate.getFullYear(); const month = currentDate.getMonth(); // 0-11, 注意需要加1来得到实际月份 const day = currentDate.getDate(); const weekDay = currentDate.getDay(); // 星期几：0=周日, 1=周一,..., 6=周六 // 星期的字符串映射 const weekdays = [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"]; // 获取今年的第几天 const startOfYear = new Date(year, 0, 0); const diff = currentDate - startOfYear; // 毫秒差值 const dayOfYear = Math.floor(diff / (1000 * 60 * 60 * 24)); // 转换为天数 // 设定恋爱纪念日（假设为 2019-05-01） const loveDate = new Date('2019-12-12'); const loveDiff = currentDate - loveDate; // 计算恋爱开始的天数差 const loveDays = Math.floor(loveDiff / (1000 * 60 * 60 * 24)); // 转换为天数 // 更新 SVG 中的文本内容 document.getElementById('today-date').textContent = `今天是 ${month + 1} 月 ${day} 日，${weekdays[weekDay]}`; document.getElementById('day-of-year').textContent = `也是 ${year} 年的第 ${dayOfYear} 天`; document.getElementById('love-days').textContent = `与 Ta 恋爱已经 ${loveDays} 天`;"}]