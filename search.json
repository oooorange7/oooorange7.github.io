[{"title":"高数自救指南","path":"/2024/11/29/高数自救指南/","content":"高数自救指南 双曲函数： 双曲正弦： 双曲余弦： 双曲正切： 双曲余切： 等价无穷小： 构造： 乘除型: 指数型: e指数: 正余弦: 正切变式: 变式: 通式： 构造 泰勒展开： $ P_{n}(x-x_{0}) = a_{0}+a_{1}(x-x_{0})++a_{n-1}(x-x_{0}){n-1}+a_{n}(x-x_{0}){n} $ 皮亚诺余项： 拉格朗日余项： 麦克劳林公式： ​ 其中 或 一些简单函数的麦克劳林公式： 其中 其中 其中 ​ 其中 ​ 其中 特别地， 其中","tags":["数学"],"categories":["数学笔记"]},{"title":"11/28高数笔记","path":"/2024/11/28/1128高数笔记/","content":"定积分 设 是区间 上的一个实值函数。如果对于任意的划分 其中 ，以及任意的样本点 ，我们可以定义黎曼和如下： 其中， 是第 个小区间的宽度。然后，如果存在一个常数 ，使得对于任意的划分 ，当划分的“粒度”趋近于零时，黎曼和 会收敛到 ，即： 那么我们就说函数 在区间 上是黎曼可积的，且其黎曼积分为 。 总结起来，黎曼积分的定义形式化地表示为： 其中 是划分的“最大宽度”或“分割粒度”，如果该极限存在，那么这个极限值就是黎曼积分的值。 黎曼可积的充分条件： 函数 在区间 上满足下列条件之一，则它是黎曼可积的： 在 上连续； 在 上有界，且只有有限个间断点； 在 上单调。 积分估值不等式： 如果 对于所有 都成立，则有： 积分中值定理： 设 在闭区间 上连续, 在闭区间 上可积，则存在一个点 ，使得 特别的，当 时， 施瓦茨不等式： 设函数 在 上连续： 离散型施瓦茨不等式：","tags":["数学"],"categories":["数学笔记"]},{"title":"11/26高数笔记","path":"/2024/11/26/1126高数笔记/","content":"积分 的求解方法 一、三角函数代换法 （一）代换过程 我们通过令 来进行代换。之所以选择正切函数进行代换，是因为当对 做这样的代换后， 的形式能够借助三角函数的恒等式进行化简，从而简化积分运算。 当 时，依据求导公式，可得 。 此时，来看被积函数中的 部分，将 代入可得： 这样，原积分 就转变为： （二）求解 对于 的求解，我们采用如下技巧： 令 ，那么 。 所以： 再把 代回，就得到： （三）代换回原变量 因为之前做了代换 ，所以 。 又根据三角函数关系 ，可得： 那么： 简化后： 由于 是常数，可并入到常数 中，所以通过三角函数代换法得到原积分的结果为： 二、双曲函数代换法 （一）代换过程 这次我们选择令 进行代换。双曲函数在处理一些含有类似 形式的积分时，也能起到很好的化简作用。 当 时，。 将 代入 可得： 于是，原积分 变为： （二）求解 很简单，。 （三）代换回原变量 因为做了代换 ，所以 ，那么 。 所以通过双曲函数代换法得到原积分的结果为： 三、关于积分 的分析 （一）利用分部积分法 设 ，，则 ，。 根据分部积分公式 ，可得： （二）对 进行处理 将 写成 ，则： 进一步展开得： 其中： （三）得到递推关系 由上述结果可得： 移项解出 ，得： （四）对于 当 时，。 根据基本积分公式：","tags":["数学"],"categories":["数学笔记"]},{"title":"Javascript Test","path":"/2024/11/19/JavaScript-Test/","content":""},{"title":"泡泡膜什么时候破？","path":"/2024/11/15/思考题：泡泡膜什么时候破？/","content":"思考题：泡泡膜什么时候破？ 两个圆环之间的肥皂泡形成的曲面叫悬链面（catenoid）。它是由悬链线（catenola） 绕轴旋转形成的。当两个圆环之间的距离太远时，因为上述曲面不存在，泡泡会破。在计算机的帮助下，求泡泡破掉的那一刻，圆环之间的距离和圆环半径之比大约是多少？ 在悬链线公式 中， 仅与重力和泡泡膜材质有关，本题不考虑表面张力等另外元素，故令 . 画出 的图像，任选一点 ，作 关于 轴的对称点 ，连结 ，过 作 轴的垂线 . 1 其中， 即为两圆环之间的距离， 即为圆环半径长。在实际情况下， 不变，变化的是 . 因为 , 为简便运算，我们讨论 的性质. 对 求导获得图像 ： 2 由上图可知， 在 时有最小值. 所以 在 时取得最大值 . 在实际情况中，两圆环被分开时，两圆环间距离与圆环半径的比值越来越大，即 越来越大，但无法大于最大值 ，否则泡泡破裂。换句话说，当泡泡膜的截面形状在悬链线 中无法找到时，这个泡泡膜不存在。","tags":["数学"],"categories":["数学思考题"]},{"title":"Hello World","path":"/2024/09/12/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment"},{"path":"/about/about.html","content":"我的个人信息 这里是你自己的个人信息页面，包含关于你的一些介绍和联系方式等内容。 YuanCheng Tian tianych2024@shanghaitech.edu.cn ; oooorange7tian@outlook.com Bachelor of Engineering in Electronic Engineering (Expected June 2028) School of Information Science and Technology ShanghaiTech University \\(There\\;is\\;a\\;negligible\\;beginning\\;in\\;all\\;great\\;action\\;and\\;thought.*\\)"},{"path":"/js/index.js","content":"// Original code by Xecades // Modified code © 2021 - 2024 YangguangZhou (GitHub: YangguangZhou) const moment = require(\"moment\"); const request = require(\"request\"); const fs = require(\"fs\"); var param; const prefix = \"http://cards.jerryz.com.cn\"; const offset = [0, -0.75, 1.75, 0, 2.7, 4.8]; const icons = [\"wechat\", \"qq\", \"site\", \"phone\", \"email\", \"github\", \"gitee\", \"coolapk\", \"bilibili\", \"zhihu\", \"weibo\", \"tiktok\", \"twitter\", \"telegram\", \"facebook\", \"instagram\", \"google\", \"microsoft\", \"luogu\", \"codeforces\", \"alipay\", \"csdn\", \"douban\", \"taobao\", \"linuxdo\"]; function getParam(str) { return trans(param.get(str)); } function trans(text) { if (text) return text .replace(/{%amp%}/gm, \"&amp;\") .replace(/{%lt%}/gm, \"&lt;\") .replace(/{%gt%}/gm, \"&gt;\") return text; } function getBG() { var ret = 1; if (getParam(\"img\") && +getParam(\"img\") >= 1 && +getParam(\"img\") { request({ url: url, encoding: \"binary\" }, function (err, resp, body) { if (!err && resp.statusCode == 200) resolve('data:image/png;base64,' + Buffer.from(body, 'binary').toString('base64')); else reject(err); }); }); } function readSVG(url) { return new Promise((resolve, reject) => { request(url, function (err, resp, body) { if (!err && resp.statusCode == 200) resolve('data:image/svg+xml;base64,' + Buffer.from(body, 'utf8').toString('base64')); else reject(err); }); }); } async function getSocial() { var can = []; var ret = \"\"; for (var key of param.keys()) if (icons.includes(key)) can.push(key); var margin = 25; var sp = (175 - margin) / can.length; for (var i = 0; i < can.length; i++) { ret += ` ${getParam(can[i])} `; } return ret; } function getDur() { var date = getParam(\"date\") || \"\"; if (date == \"\") date = `${moment().year()}-12-31`; var ret = -moment().diff(date, 'days') var today = moment(new Date()).format('YYYY-MM-DD') if (date == today) return `还有 0 天`; else if (ret >= 0) return `还有 ${ret + 1} 天`; else return `已经 ${-ret} 天`; } function getStr() { var date = getParam(\"date\") || \"\"; if (getParam(\"str\")) return getParam(\"str\"); if (date == \"\") return ` ${moment().year()} 年末`; return \"某个特殊日期\"; } function getWeekday() { var ret = \"\"; switch (+moment().format(\"d\")) { case 0: ret = \"星期日\"; break; case 1: ret = \"星期一\"; break; case 2: ret = \"星期二\"; break; case 3: ret = \"星期三\"; break; case 4: ret = \"星期四\"; break; case 5: ret = \"星期五\"; break; case 6: ret = \"星期六\"; break; } return ret; } async function getCounter(req) { const url = \"https://counter-sever.jerryz.com.cn/counter\"; const { default: fetch } = await import('node-fetch'); const name = getParam(\"counter\"); //const headers = req && req.headers ? req.headers : {}; //const ip = req.headers['x-forwarded-for'] || req.headers['x-real-ip'] || req.connection.remoteAddress; const result = await (await fetch(url, { method: 'POST', headers: { 'Content-Type': 'application/json', }, body: JSON.stringify({ name }), })).json(); const counterView = result.times; return counterView; } module.exports = async (req, res) => { if (!req.url.includes(\"Jerry Zhou\")) console.log(\"[Running] \" + decodeURI(req.url)); moment.locale(\"zh-cn\"); param = new URLSearchParams(req.url.split(\"/api\")[1]); const counter = await getCounter(); res.setHeader(\"Content-Type\", \"image/svg+xml\"); const { background = await readImage(`${prefix}/res/bg/${getBG()}.png`), bg_offset = 250 - getBGOffset(), socialText = await getSocial(), dayOfYear = moment().dayOfYear() - 1, year = moment().year(), month = moment().format('M'), day = moment().format('D'), weekday = getWeekday(), toStr = getStr(), toDur = getDur(), quote_ = getParam(\"quote\") || \"永远相信美好的事情即将发生✨\", fontColor = \"rgba(\" + (getParam(\"color\") || \"0,0,0,1\") + \")\", bgColor = \"rgba(\" + (getParam(\"bg\") || \"0,0,0,0\") + \")\", welcomeText = counter ? `欢迎您，第 ${counter} 位访问本页面的朋友 🎉` : '欢迎您朋友 🎉' } = req.query; res.send(` svg {background-color: ${bgColor}; } #image .line { fill: none; stroke: ${fontColor}; opacity: .7; stroke-miterlimit: 10; stroke-width: 0.5px; stroke-linecap: round; } #image .bg { height: 250px; } #detail .text { font-size: 12px; fill: ${fontColor}; font-weight: lighter; } #contact .item .icon { width: 16px; height: 16px; } #contact .item .text { font-size: 10px; fill: ${fontColor}; font-weight: lighter; } #quote .text { font-size: 10px; fill: ${fontColor}; font-weight: lighter; } Cards | Jerry Zhou ${welcomeText} 今天是 ${month} 月 ${day} 日，${weekday} 也是 ${year} 年的第 ${dayOfYear} 天 ${toStr}${toDur} ${quote_} ${socialText} `); };"},{"title":"social","path":"/social/index.html","content":"/* 设置整体页面背景色（默认的浅色背景） */ /* 默认的背景色为浅色 */ #my-card { background-color: #ffffff; padding: 10px 20px; /* 适当减小内边距 */ border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); max-width: 900px; margin: 40px auto; /* 居中显示 */ display: flex; flex-direction: column; /* 子元素垂直排列 */ justify-content: flex-start; /* 确保内容紧贴顶部 */ height: auto; /* 高度自适应 */ } #my-card p { margin: 0 0 10px 0; /* 行间距为 10px */ padding: 0; } /* SVG 部分的样式 */ #my-svg svg { background-color: rgba(255, 255, 255, 1); /* 保证背景为白色 */ width: 100%; /* 宽度自适应 */ height: auto; /* 高度根据内容自适应，保持比例 */ display: block; /* 防止 SVG 元素底部有空隙，通常是 inline 元素 */ margin: 0; /* 确保没有额外的外边距 */ } /* 文本样式 */ #my-svg .text { font-size: 12px; fill: black; /* 默认黑色文字 */ } /* 线条样式 */ #my-svg .line { stroke: black; stroke-width: 0.5px; stroke-linecap: round; } #my-svg svg { background-color: rgba(255, 255, 255, 1); /* 浅色背景 */ } /* 线条样式 */ #my-svg #image .line { fill: none; stroke: rgba(0, 0, 0, 1); opacity: .7; stroke-miterlimit: 10; stroke-width: 0.5px; stroke-linecap: round; } #my-svg #image .bg { height: 250px; } /* 文本样式 */ #my-svg #detail .text { font-size: 12px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } #my-svg #contact .item .icon { width: 16px; height: 16px; } #my-svg #contact .item .text { font-size: 10px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } #my-svg #quote .text { font-size: 10px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } Cards 欢迎来到oooorange的博客！ 🎉 今天是 11 月 18 日，星期一 也是 2024 年的第 322 天 与 Ta 恋爱已经 1803 天 从此万里路 不再崎岖漫长✨✨ // 获取当前日期 const currentDate = new Date(); // 获取当前日期的年月日 const year = currentDate.getFullYear(); const month = currentDate.getMonth(); // 0-11, 注意需要加1来得到实际月份 const day = currentDate.getDate(); const weekDay = currentDate.getDay(); // 星期几：0=周日, 1=周一,..., 6=周六 // 星期的字符串映射 const weekdays = [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"]; // 获取今年的第几天 const startOfYear = new Date(year, 0, 0); const diff = currentDate - startOfYear; // 毫秒差值 const dayOfYear = Math.floor(diff / (1000 * 60 * 60 * 24)); // 转换为天数 // 设定恋爱纪念日（假设为 2019-05-01） const loveDate = new Date('2019-12-12'); const loveDiff = currentDate - loveDate; // 计算恋爱开始的天数差 const loveDays = Math.floor(loveDiff / (1000 * 60 * 60 * 24)); // 转换为天数 // 更新 SVG 中的文本内容 document.getElementById('today-date').textContent = `今天是 ${month + 1} 月 ${day} 日，${weekdays[weekDay]}`; document.getElementById('day-of-year').textContent = `也是 ${year} 年的第 ${dayOfYear} 天`; document.getElementById('love-days').textContent = `与 Ta 恋爱已经 ${loveDays} 天`;"},{"path":"/cards/cards.html","content":"/* 设置整体页面背景色（默认的浅色背景） */ /* 默认的背景色为浅色 */ #my-card { background-color: #ffffff; padding: 10px 20px; /* 适当减小内边距 */ border-radius: 10px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); max-width: 900px; margin: 40px auto; /* 居中显示 */ display: flex; flex-direction: column; /* 子元素垂直排列 */ justify-content: flex-start; /* 确保内容紧贴顶部 */ height: auto; /* 高度自适应 */ } #my-card p { margin: 0 0 10px 0; /* 行间距为 10px */ padding: 0; } /* SVG 部分的样式 */ #my-svg svg { background-color: rgba(255, 255, 255, 1); /* 保证背景为白色 */ width: 100%; /* 宽度自适应 */ height: auto; /* 高度根据内容自适应，保持比例 */ display: block; /* 防止 SVG 元素底部有空隙，通常是 inline 元素 */ margin: 0; /* 确保没有额外的外边距 */ } /* 文本样式 */ #my-svg .text { font-size: 12px; fill: black; /* 默认黑色文字 */ } /* 线条样式 */ #my-svg .line { stroke: black; stroke-width: 0.5px; stroke-linecap: round; } #my-svg svg { background-color: rgba(255, 255, 255, 1); /* 浅色背景 */ } /* 线条样式 */ #my-svg #image .line { fill: none; stroke: rgba(0, 0, 0, 1); opacity: .7; stroke-miterlimit: 10; stroke-width: 0.5px; stroke-linecap: round; } #my-svg #image .bg { height: 250px; } /* 文本样式 */ #my-svg #detail .text { font-size: 12px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } #my-svg #contact .item .icon { width: 16px; height: 16px; } #my-svg #contact .item .text { font-size: 10px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } #my-svg #quote .text { font-size: 10px; fill: rgba(0, 0, 0, 1); font-weight: lighter; } Cards 欢迎 🎉 今天是 11 月 18 日，星期一 也是 2024 年的第 322 天 与 Ta 恋爱已经 1803 天 从此万里路 不再崎岖漫长✨✨ // 获取当前日期 const currentDate = new Date(); // 获取当前日期的年月日 const year = currentDate.getFullYear(); const month = currentDate.getMonth(); // 0-11, 注意需要加1来得到实际月份 const day = currentDate.getDate(); const weekDay = currentDate.getDay(); // 星期几：0=周日, 1=周一,..., 6=周六 // 星期的字符串映射 const weekdays = [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"]; // 获取今年的第几天 const startOfYear = new Date(year, 0, 0); const diff = currentDate - startOfYear; // 毫秒差值 const dayOfYear = Math.floor(diff / (1000 * 60 * 60 * 24)); // 转换为天数 // 设定恋爱纪念日（假设为 2019-05-01） const loveDate = new Date('2019-12-12'); const loveDiff = currentDate - loveDate; // 计算恋爱开始的天数差 const loveDays = Math.floor(loveDiff / (1000 * 60 * 60 * 24)); // 转换为天数 // 更新 SVG 中的文本内容 document.getElementById('today-date').textContent = `今天是 ${month + 1} 月 ${day} 日，${weekdays[weekDay]}`; document.getElementById('day-of-year').textContent = `也是 ${year} 年的第 ${dayOfYear} 天`; document.getElementById('love-days').textContent = `与 Ta 恋爱已经 ${loveDays} 天`;"},{"title":"About me","path":"/about/index.html","content":"YuanCheng Tian tianych2024@shanghaitech.edu.cn ; oooorange7tian@outlook.com Bachelor of Engineering in Electronic Engineering (Expected June 2028) School of Information Science and Technology ShanghaiTech University"},{"path":"/js/Mathjax/core/core.js","content":"import './lib/core.js'; import {HTMLHandler} from '../../../js/handlers/html/HTMLHandler.js'; import {browserAdaptor} from '../../../js/adaptors/browserAdaptor.js'; if (MathJax.startup) { MathJax.startup.registerConstructor('HTMLHandler', HTMLHandler); MathJax.startup.registerConstructor('browserAdaptor', browserAdaptor); MathJax.startup.useHandler('HTMLHandler'); MathJax.startup.useAdaptor('browserAdaptor'); } if (MathJax.loader) { MathJax._.mathjax.mathjax.asyncLoad = (name => MathJax.loader.load(name)); }"},{"path":"/js/Mathjax/core/build.json","content":"{\"component\":\"core\",\"targets\":[\"mathjax.ts\",\"core\",\"util\",\"handlers\",\"adaptors/HTMLAdaptor.ts\",\"adaptors/browserAdaptor.ts\",\"components/global.ts\"],\"exclude\":[\"core/MmlTree/JsonMmlVisitor.ts\",\"core/MmlTree/LegacyMmlVisitor.ts\",\"core/MmlTree/TestMmlVisitor.ts\",\"util/asyncLoad\",\"util/entities\"]}"},{"path":"/js/Mathjax/source.js","content":"/************************************************************* * * Copyright (c) 2019-2021 The MathJax Consortium * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ const src = __dirname; export const source = { 'core': `${src}/core/core.js`, 'adaptors/liteDOM': `${src}/adaptors/liteDOM/liteDOM.js`, 'input/tex': `${src}/input/tex/tex.js`, 'input/tex-base': `${src}/input/tex-base/tex-base.js`, 'input/tex-full': `${src}/input/tex-full/tex-full.js`, '[tex]/action': `${src}/input/tex/extensions/action/action.js`, '[tex]/all-packages': `${src}/input/tex/extensions/all-packages/all-packages.js`, '[tex]/autoload': `${src}/input/tex/extensions/autoload/autoload.js`, '[tex]/ams': `${src}/input/tex/extensions/ams/ams.js`, '[tex]/amscd': `${src}/input/tex/extensions/amscd/amscd.js`, '[tex]/bbox': `${src}/input/tex/extensions/bbox/bbox.js`, '[tex]/boldsymbol': `${src}/input/tex/extensions/boldsymbol/boldsymbol.js`, '[tex]/braket': `${src}/input/tex/extensions/braket/braket.js`, '[tex]/bussproofs': `${src}/input/tex/extensions/bussproofs/bussproofs.js`, '[tex]/cancel': `${src}/input/tex/extensions/cancel/cancel.js`, '[tex]/centernot': `${src}/input/tex/extensions/centernot/centernot.js`, '[tex]/color': `${src}/input/tex/extensions/color/color.js`, '[tex]/colorv2': `${src}/input/tex/extensions/colorv2/colorv2.js`, '[tex]/configmacros': `${src}/input/tex/extensions/configmacros/configmacros.js`, '[tex]/enclose': `${src}/input/tex/extensions/enclose/enclose.js`, '[tex]/extpfeil': `${src}/input/tex/extensions/extpfeil/extpfeil.js`, '[tex]/html': `${src}/input/tex/extensions/html/html.js`, '[tex]/mathtools': `${src}/input/tex/extensions/mathtools/mathtools.js`, '[tex]/mhchem': `${src}/input/tex/extensions/mhchem/mhchem.js`, '[tex]/newcommand': `${src}/input/tex/extensions/newcommand/newcommand.js`, '[tex]/noerrors': `${src}/input/tex/extensions/noerrors/noerrors.js`, '[tex]/noundefined': `${src}/input/tex/extensions/noundefined/noundefined.js`, '[tex]/physics': `${src}/input/tex/extensions/physics/physics.js`, '[tex]/require': `${src}/input/tex/extensions/require/require.js`, '[tex]/setoptions': `${src}/input/tex/extensions/setoptions/setoptions.js`, '[tex]/tagformat': `${src}/input/tex/extensions/tagformat/tagformat.js`, '[tex]/textmacros': `${src}/input/tex/extensions/textmacros/textmacros.js`, '[tex]/unicode': `${src}/input/tex/extensions/unicode/unicode.js`, '[tex]/verb': `${src}/input/tex/extensions/verb/verb.js`, '[tex]/cases': `${src}/input/tex/extensions/cases/cases.js`, '[tex]/empheq': `${src}/input/tex/extensions/empheq/empheq.js`, 'input/mml': `${src}/input/mml/mml.js`, 'input/mml/entities': `${src}/input/mml/entities/entities.js`, '[mml]/mml3': `${src}/input/mml/extensions/mml3/mml3.js`, 'input/asciimath': `${src}/input/asciimath/asciimath.js`, 'output/chtml': `${src}/output/chtml/chtml.js`, 'output/chtml/fonts/tex': `${src}/output/chtml/fonts/tex/tex.js`, 'output/svg': `${src}/output/svg/svg.js`, 'output/svg/fonts/tex': `${src}/output/svg/fonts/tex/tex.js`, 'a11y/assistive-mml': `${src}/a11y/assistive-mml/assistive-mml.js`, 'a11y/semantic-enrich': `${src}/a11y/semantic-enrich/semantic-enrich.js`, 'a11y/complexity': `${src}/a11y/complexity/complexity.js`, 'a11y/explorer': `${src}/a11y/explorer/explorer.js`, 'a11y/sre': `${src}/a11y/sre/sre.js`, 'ui/lazy': `${src}/ui/lazy/lazy.js`, 'ui/menu': `${src}/ui/menu/menu.js`, 'ui/safe': `${src}/ui/safe/safe.js`, 'mml-chtml': `${src}/mml-chtml/mml-chtml.js`, 'mml-svg': `${src}/mml-svg/mml-svg.js`, 'tex-chtml': `${src}/tex-chtml/tex-chtml.js`, 'tex-svg': `${src}/tex-svg/tex-svg.js`, 'tex-mml-chtml': `${src}/tex-mml-chtml/tex-mml-chtml.js`, 'tex-mml-svg': `${src}/tex-mml-svg/tex-mml-svg.js`, 'loader': `${src}/loader/loader.js`, 'startup': `${src}/startup/startup.js` };"},{"path":"/js/Mathjax/core/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'core', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/dependencies.js","content":"/************************************************************* * * Copyright (c) 2019-2021 The MathJax Consortium * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ export const dependencies = { 'a11y/semantic-enrich': ['input/mml', 'a11y/sre'], 'a11y/complexity': ['a11y/semantic-enrich'], 'a11y/explorer': ['a11y/semantic-enrich', 'ui/menu'], '[mml]/mml3': ['input/mml'], '[tex]/all-packages': ['input/tex-base'], '[tex]/action': ['input/tex-base', '[tex]/newcommand'], '[tex]/autoload': ['input/tex-base', '[tex]/require'], '[tex]/ams': ['input/tex-base'], '[tex]/amscd': ['input/tex-base'], '[tex]/bbox': ['input/tex-base', '[tex]/ams', '[tex]/newcommand'], '[tex]/boldsymbol': ['input/tex-base'], '[tex]/braket': ['input/tex-base'], '[tex]/bussproofs': ['input/tex-base'], '[tex]/cancel': ['input/tex-base', '[tex]/enclose'], '[tex]/centernot': ['input/tex-base'], '[tex]/color': ['input/tex-base'], '[tex]/colorv2': ['input/tex-base'], '[tex]/colortbl': ['input/tex-base', '[tex]/color'], '[tex]/configmacros': ['input/tex-base', '[tex]/newcommand'], '[tex]/enclose': ['input/tex-base'], '[tex]/extpfeil': ['input/tex-base', '[tex]/newcommand', '[tex]/ams'], '[tex]/html': ['input/tex-base'], '[tex]/mathtools': ['input/tex-base', '[tex]/newcommand', '[tex]/ams'], '[tex]/mhchem': ['input/tex-base', '[tex]/ams'], '[tex]/newcommand': ['input/tex-base'], '[tex]/noerrors': ['input/tex-base'], '[tex]/noundefined': ['input/tex-base'], '[tex]/physics': ['input/tex-base'], '[tex]/require': ['input/tex-base'], '[tex]/setoptions': ['input/tex-base'], '[tex]/tagformat': ['input/tex-base'], '[tex]/textcomp': ['input/tex-base', '[tex]/textmacros'], '[tex]/textmacros': ['input/tex-base'], '[tex]/unicode': ['input/tex-base'], '[tex]/verb': ['input/tex-base'], '[tex]/cases': ['[tex]/empheq'], '[tex]/empheq': ['input/tex-base', '[tex]/ams'] }; export const paths = { tex: '[mathjax]/input/tex/extensions', mml: '[mathjax]/input/mml/extensions', sre: '[mathjax]/sre/mathmaps' }; const allPackages = Array.from(Object.keys(dependencies)) .filter(name => name.substr(0,5) === '[tex]' && name !== '[tex]/autoload' && name !== '[tex]/colorv2' && name !== '[tex]/all-packages'); export const provides = { 'startup': ['loader'], 'input/tex': [ 'input/tex-base', '[tex]/ams', '[tex]/newcommand', '[tex]/noundefined', '[tex]/require', '[tex]/autoload', '[tex]/configmacros' ], 'input/tex-full': [ 'input/tex-base', '[tex]/all-packages', ...allPackages ], '[tex]/all-packages': allPackages }; // // Compatibility with v3.0 names for TeX extensions // export const compatibility = { '[tex]/amsCd': '[tex]/amscd', '[tex]/colorV2': '[tex]/colorv2', '[tex]/configMacros': '[tex]/configmacros', '[tex]/tagFormat': '[tex]/tagformat' };"},{"path":"/js/Mathjax/MathJax.js","content":"var MathJax = {debug:true}; var window = { MathJax: MathJax }; var navigator = {}; var document = null; exports.MathJax = MathJax; (function (BASENAME) { var BASE = window[BASENAME]; if (!BASE) {BASE = window[BASENAME] = {}} var PROTO = []; // a static object used to indicate when a prototype is being created var OBJECT = function (def) { var obj = def.constructor; if (!obj) {obj = function () {}} for (var id in def) {if (id !== 'constructor' && def.hasOwnProperty(id)) {obj[id] = def[id]}} return obj; }; var CONSTRUCTOR = function () { return function () {return arguments.callee.Init.call(this,arguments)}; }; BASE.Object = OBJECT({ constructor: CONSTRUCTOR(), Subclass: function (def,classdef) { var obj = CONSTRUCTOR(); obj.SUPER = this; obj.Init = this.Init; obj.Subclass = this.Subclass; obj.Augment = this.Augment; obj.protoFunction = this.protoFunction; obj.can = this.can; obj.has = this.has; obj.isa = this.isa; obj.prototype = new this(PROTO); obj.prototype.constructor = obj; // the real constructor obj.Augment(def,classdef); return obj; }, Init: function (args) { var obj = this; if (args.length === 1 && args[0] === PROTO) {return obj} if (!(obj instanceof args.callee)) {obj = new args.callee(PROTO)} return obj.Init.apply(obj,args) || obj; }, Augment: function (def,classdef) { var id; if (def != null) { for (id in def) {if (def.hasOwnProperty(id)) {this.protoFunction(id,def[id])}} // MSIE doesn't list toString even if it is not native so handle it separately if (def.toString !== this.prototype.toString && def.toString !== {}.toString) {this.protoFunction('toString',def.toString)} } if (classdef != null) { for (id in classdef) {if (classdef.hasOwnProperty(id)) {this[id] = classdef[id]}} } return this; }, protoFunction: function (id,def) { this.prototype[id] = def; if (typeof def === \"function\") {def.SUPER = this.SUPER.prototype} }, prototype: { Init: function () {}, SUPER: function (fn) {return fn.callee.SUPER}, can: function (method) {return typeof(this[method]) === \"function\"}, has: function (property) {return typeof(this[property]) !== \"undefined\"}, isa: function (obj) {return (obj instanceof Object) && (this instanceof obj)} }, can: function (method) {return this.prototype.can.call(this,method)}, has: function (property) {return this.prototype.has.call(this,property)}, isa: function (obj) { var constructor = this; while (constructor) { if (constructor === obj) {return true} else {constructor = constructor.SUPER} } return false; }, SimpleSUPER: OBJECT({ constructor: function (def) {return this.SimpleSUPER.define(def)}, define: function (src) { var dst = {}; if (src != null) { for (var id in src) {if (src.hasOwnProperty(id)) {dst[id] = this.wrap(id,src[id])}} // MSIE doesn't list toString even if it is not native so handle it separately if (src.toString !== this.prototype.toString && src.toString !== {}.toString) {dst.toString = this.wrap('toString',src.toString)} } return dst; }, wrap: function (id,f) { if (typeof(f) !== 'function' || !f.toString().match(/\\.\\s*SUPER\\s*\\(/)) {return f} var fn = function () { this.SUPER = fn.SUPER[id]; try {var result = f.apply(this,arguments)} catch (err) {delete this.SUPER; throw err} delete this.SUPER; return result; } fn.toString = function () {return f.toString.apply(f,arguments)} return fn; } }) }); BASE.Object.isArray = Array.isArray || function (obj) { return Object.prototype.toString.call(obj) === \"[object Array]\"; }; BASE.Object.Array = Array; })(\"MathJax\"); /**********************************************************/ /* * Create a callback function from various forms of data: * * MathJax.Callback(fn) -- callback to a function * * MathJax.Callback([fn]) -- callback to function * MathJax.Callback([fn,data...]) * -- callback to function with given data as arguments * MathJax.Callback([object,fn]) * -- call fn with object as \"this\" * MathJax.Callback([object,fn,data...]) * -- call fn with object as \"this\" and data as arguments * MathJax.Callback([\"method\",object]) * -- call method of object wth object as \"this\" * MathJax.Callback([\"method\",object,data...]) * -- as above, but with data as arguments to method * * MathJax.Callback({hook: fn, data: [...], object: this}) * -- give function, data, and object to act as \"this\" explicitly * * MathJax.Callback(\"code\") -- callback that compiles and executes a string * * MathJax.Callback([...],i) * -- use slice of array starting at i and interpret * result as above. (Used for passing \"arguments\" array * and trimming initial arguments, if any.) */ /* * MathJax.Callback.After([...],cb1,cb2,...) * -- make a callback that isn't called until all the other * ones are called first. I.e., wait for a union of * callbacks to occur before making the given callback. */ /* * MathJax.Callback.Queue([callback,...]) * -- make a synchronized queue of commands that process * sequentially, waiting for those that return uncalled * callbacks. */ /* * MathJax.Callback.Signal(name) * -- finds or creates a names signal, to which listeners * can be attached and are signaled by messages posted * to the signal. Responses can be asynchronous. */ (function (BASENAME) { var BASE = window[BASENAME]; if (!BASE) {BASE = window[BASENAME] = {}} // // Create a callback from an associative array // var CALLBACK = function (data) { var cb = function () {return arguments.callee.execute.apply(arguments.callee,arguments)}; for (var id in CALLBACK.prototype) { if (CALLBACK.prototype.hasOwnProperty(id)) { if (typeof(data[id]) !== 'undefined') {cb[id] = data[id]} else {cb[id] = CALLBACK.prototype[id]} } } cb.toString = CALLBACK.prototype.toString; return cb; }; CALLBACK.prototype = { isCallback: true, hook: function () {}, data: [], object: window, execute: function () { if (!this.called || this.autoReset) { this.called = !this.autoReset; return this.hook.apply(this.object,this.data.concat([].slice.call(arguments,0))); } }, reset: function () {delete this.called}, toString: function () {return this.hook.toString.apply(this.hook,arguments)} }; var ISCALLBACK = function (f) { return (typeof(f) === \"function\" && f.isCallback); } // // Evaluate a string in global context // var EVAL = function (code) {return eval.call(window,code)} var TESTEVAL = function () { EVAL(\"var __TeSt_VaR__ = 1\"); // check if it works in global context if (window.__TeSt_VaR__) { try { delete window.__TeSt_VaR__; } // NOTE IE9 throws when in IE7 mode catch (error) { window.__TeSt_VaR__ = null; } } else { if (window.execScript) { // IE EVAL = function (code) { BASE.__code = code; code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\"; window.execScript(code); var result = BASE.__result; delete BASE.__result; delete BASE.__code; if (result instanceof Error) {throw result} return result; } } else { // Safari2 EVAL = function (code) { BASE.__code = code; code = \"try {\"+BASENAME+\".__result = eval(\"+BASENAME+\".__code)} catch(err) {\"+BASENAME+\".__result = err}\"; var head = (document.getElementsByTagName(\"head\"))[0]; if (!head) {head = document.body} var script = document.createElement(\"script\"); script.appendChild(document.createTextNode(code)); head.appendChild(script); head.removeChild(script); var result = BASE.__result; delete BASE.__result; delete BASE.__code; if (result instanceof Error) {throw result} return result; } } } TESTEVAL = null; } // // Create a callback from various types of data // var USING = function (args,i) { if (arguments.length > 1) { if (arguments.length === 2 && !(typeof arguments[0] === 'function') && arguments[0] instanceof Object && typeof arguments[1] === 'number') {args = [].slice.call(args,i)} else {args = [].slice.call(arguments,0)} } if (args instanceof Array && args.length === 1) {args = args[0]} if (typeof args === 'function') { if (args.execute === CALLBACK.prototype.execute) {return args} return CALLBACK({hook: args}); } else if (args instanceof Array) { if (typeof(args[0]) === 'string' && args[1] instanceof Object && typeof args[1][args[0]] === 'function') { return CALLBACK({hook: args[1][args[0]], object: args[1], data: args.slice(2)}); } else if (typeof args[0] === 'function') { return CALLBACK({hook: args[0], data: args.slice(1)}); } else if (typeof args[1] === 'function') { return CALLBACK({hook: args[1], object: args[0], data: args.slice(2)}); } } else if (typeof(args) === 'string') { if (TESTEVAL) TESTEVAL(); return CALLBACK({hook: EVAL, data: [args]}); } else if (args instanceof Object) { return CALLBACK(args); } else if (typeof(args) === 'undefined') { return CALLBACK({}); } throw Error(\"Can't make callback from given data\"); }; // // Wait for a given time to elapse and then perform the callback // var DELAY = function (time,callback) { callback = USING(callback); callback.timeout = setTimeout(callback,time); return callback; }; // // Callback used by AFTER, QUEUE, and SIGNAL to check if calls have completed // var WAITFOR = function (callback,signal) { callback = USING(callback); if (!callback.called) {WAITSIGNAL(callback,signal); signal.pending++} }; var WAITEXECUTE = function () { var signals = this.signal; delete this.signal; this.execute = this.oldExecute; delete this.oldExecute; var result = this.execute.apply(this,arguments); if (ISCALLBACK(result) && !result.called) {WAITSIGNAL(result,signals)} else { for (var i = 0, m = signals.length; i < m; i++) { signals[i].pending--; if (signals[i].pending"},{"path":"/js/Mathjax/mml-chtml/mml-chtml.js","content":"import '../startup/init.js'; import './preload.js'; import '../core/core.js'; import '../input/mml/mml.js'; import '../output/chtml/chtml.js'; import '../output/chtml/fonts/tex/tex.js'; import '../ui/menu/menu.js'; import '../a11y/assistive-mml/assistive-mml.js'; import '../startup/startup.js';"},{"path":"/js/Mathjax/latest/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'latest', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/latest/latest.js","content":"import {loadLatest} from '../../../js/components/latest.js'; loadLatest();"},{"path":"/js/Mathjax/loader/build.json","content":"{\"component\":\"loader\",\"targets\":[\"components/loader.ts\",\"components/package.ts\"]}"},{"path":"/js/Mathjax/loader/loader.js","content":"import './lib/loader.js'; import {Loader, CONFIG} from '../../../js/components/loader.js'; import {combineDefaults} from '../../../js/components/global.js'; import {dependencies, paths, provides} from '../dependencies.js'; combineDefaults(MathJax.config.loader, 'dependencies', dependencies); combineDefaults(MathJax.config.loader, 'paths', paths); combineDefaults(MathJax.config.loader, 'provides', provides); Loader.load(...CONFIG.load) .then(() => CONFIG.ready()) .catch((message, name) => CONFIG.failed(message, name));"},{"path":"/js/Mathjax/loader/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'loader', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/mml-chtml/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'mml-chtml', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/mml-svg/mml-svg.js","content":"import '../startup/init.js'; import './preload.js'; import '../core/core.js'; import '../input/mml/mml.js'; import '../output/svg/svg.js'; import '../output/svg/fonts/tex/tex.js'; import '../ui/menu/menu.js'; import '../a11y/assistive-mml/assistive-mml.js'; import '../startup/startup.js';"},{"path":"/js/Mathjax/node-main/node-main.js","content":"/************************************************************* * * Copyright (c) 2019-2021 The MathJax Consortium * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ const path = eval(\"require('path')\"); // use actual node version, not webpack's version /* * Load the needed MathJax components */ require('../startup/init.js'); const {Loader, CONFIG} = require('../../../js/components/loader.js'); const {combineDefaults, combineConfig} = require('../../../js/components/global.js'); /* * Set up the initial configuration */ combineDefaults(MathJax.config, 'loader', { require: eval('require'), // use node's require() to load files failed: (err) => {throw err} // pass on error message to init()'s catch function }); /* * Preload core and liteDOM adaptor (needed for node) */ Loader.preLoad('loader', 'startup', 'core', 'adaptors/liteDOM'); require('../core/core.js'); require('../adaptors/liteDOM/liteDOM.js'); /* * Set the mathjax root path to the location where node-main.js was loaded from, * using the actual node __dirname, not the webpack one, and removing * the directory if we are loaded from components/src/node-main. */ const dir = CONFIG.paths.mathjax = eval('__dirname'); if (path.basename(dir) === 'node-main') { CONFIG.paths.mathjax = path.dirname(dir); combineDefaults(CONFIG, 'source', require('../source.js').source); // // Set the asynchronous loader to use the js directory, so we can load // other files like entity definitions // const ROOT = path.resolve(dir, '../../../js'); const REQUIRE = MathJax.config.loader.require; MathJax._.mathjax.mathjax.asyncLoad = function (name) { return REQUIRE(name.charAt(0) === '.' ? path.resolve(ROOT, name) : name); }; } /* * The initialization function. Use as: * * require('mathjax').init({ ... }).then((MathJax) => { ... }); * * where the argument to init() is a MathJax configuration (what would be set as MathJax = {...}). * The init() function returns a promise that is resolved when MathJax is loaded and ready, and that * is passed the MathJax global variable when it is called. */ const init = (config = {}) => { combineConfig(MathJax.config, config); return Loader.load(...CONFIG.load) .then(() => CONFIG.ready()) .then(() => MathJax) // Pass MathJax global as argument to subsequent .then() calls .catch(error => CONFIG.failed(error)); } /* * Export the init() function */ export {init};"},{"path":"/js/Mathjax/mml-chtml/preload.js","content":"import {Loader} from '../../../js/components/loader.js'; Loader.preLoad( 'loader', 'startup', 'core', 'input/mml', 'output/chtml', 'output/chtml/fonts/tex.js', 'ui/menu', 'a11y/assistive-mml' );"},{"path":"/js/Mathjax/mml-svg/preload.js","content":"import {Loader} from '../../../js/components/loader.js'; Loader.preLoad( 'loader', 'startup', 'core', 'input/mml', 'output/svg', 'output/svg/fonts/tex.js', 'ui/menu', 'a11y/assistive-mml' );"},{"path":"/js/Mathjax/mml-svg/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'mml-svg', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/node-main/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); const package = PACKAGE( 'node-main', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory ); // make node-main.js exports available to caller package.output.library = { name: 'init', type: 'commonjs', export: 'init' }; module.exports = package;"},{"path":"/js/Mathjax/startup/build.json","content":"{\"component\":\"startup\",\"targets\":[\"components/loader.ts\",\"components/package.ts\",\"components/startup.ts\"]}"},{"path":"/js/Mathjax/tex-chtml-full/preload.js","content":"import {Loader} from '../../../js/components/loader.js'; Loader.preLoad( 'loader', 'startup', 'core', 'input/tex-full', 'output/chtml', 'output/chtml/fonts/tex.js', 'ui/menu', 'a11y/assistive-mml' );"},{"path":"/js/Mathjax/sre/copy.json","content":"{\"to\":\"../../../es5/sre\",\"from\":\"[node]/speech-rule-engine/lib\",\"copy\":[\"mathmaps\"]}"},{"path":"/js/Mathjax/startup/init.js","content":"import './lib/startup.js'; import {combineDefaults} from '../../../js/components/global.js'; import {dependencies, paths, provides, compatibility} from '../dependencies.js'; combineDefaults(MathJax.config.loader, 'dependencies', dependencies); combineDefaults(MathJax.config.loader, 'paths', paths); combineDefaults(MathJax.config.loader, 'provides', provides); combineDefaults(MathJax.config.loader, 'source', compatibility);"},{"path":"/js/Mathjax/startup/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'startup', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/startup/startup.js","content":"import './init.js'; import {Loader, CONFIG} from '../../../js/components/loader.js'; Loader.preLoad('loader'); Loader.load(...CONFIG.load) .then(() => CONFIG.ready()) .catch(error => CONFIG.failed(error));"},{"path":"/js/Mathjax/tex-chtml-full/tex-chtml-full.js","content":"import '../startup/init.js'; import './preload.js'; import '../core/core.js'; import '../input/tex-full/tex-full.js'; import '../output/chtml/chtml.js'; import '../output/chtml/fonts/tex/tex.js'; import '../ui/menu/menu.js'; import '../a11y/assistive-mml/assistive-mml.js'; import '../startup/startup.js';"},{"path":"/js/Mathjax/tex-chtml/preload.js","content":"import {Loader} from '../../../js/components/loader.js'; Loader.preLoad( 'loader', 'startup', 'core', 'input/tex', 'output/chtml', 'output/chtml/fonts/tex.js', 'ui/menu', 'a11y/assistive-mml' );"},{"path":"/js/Mathjax/tex-chtml-full/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'tex-chtml-full', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/tex-chtml-full-speech/preload.js","content":"import {Loader} from '../../../js/components/loader.js'; Loader.preLoad( 'loader', 'startup', 'core', 'input/tex-full', 'output/chtml', 'output/chtml/fonts/tex.js', 'ui/menu', 'a11y/assistive-mml', 'a11y/sre' );"},{"path":"/js/Mathjax/tex-chtml-full-speech/tex-chtml-full-speech.js","content":"import '../startup/init.js'; import './preload.js'; import '../core/core.js'; import '../input/tex-full/tex-full.js'; import '../output/chtml/chtml.js'; import '../output/chtml/fonts/tex/tex.js'; import '../ui/menu/menu.js'; import '../a11y/assistive-mml/assistive-mml.js'; import '../a11y/sre/sre.js'; import MathMaps from '../../../js/a11y/mathmaps.js'; import base from 'speech-rule-engine/lib/mathmaps/base.json'; import en from 'speech-rule-engine/lib/mathmaps/en.json'; import nemeth from 'speech-rule-engine/lib/mathmaps/nemeth.json'; MathMaps.set('base', base); MathMaps.set('en', en); MathMaps.set('nemeth', nemeth); import '../startup/startup.js';"},{"path":"/js/Mathjax/tex-chtml/tex-chtml.js","content":"import '../startup/init.js'; import './preload.js'; import '../core/core.js'; import '../input/tex/tex.js'; import '../output/chtml/chtml.js'; import '../output/chtml/fonts/tex/tex.js'; import '../ui/menu/menu.js'; import '../a11y/assistive-mml/assistive-mml.js'; import '../startup/startup.js';"},{"path":"/js/Mathjax/tex-chtml/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'tex-chtml', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/tex-mml-chtml/preload.js","content":"import {Loader} from '../../../js/components/loader.js'; Loader.preLoad( 'loader', 'startup', 'core', 'input/tex', 'input/mml', 'output/chtml', 'output/chtml/fonts/tex.js', 'ui/menu', 'a11y/assistive-mml' );"},{"path":"/js/Mathjax/tex-chtml-full-speech/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'tex-chtml-full-speech', // the package to build '../../../js', // location of the MathJax js library [ // packages to link to ], __dirname // our directory );"},{"path":"/js/Mathjax/tex-mml-svg/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'tex-mml-svg', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/tex-mml-svg/tex-mml-svg.js","content":"import '../startup/init.js'; import './preload.js'; import '../core/core.js'; import '../input/tex/tex.js'; import '../input/mml/mml.js'; import '../output/svg/svg.js'; import '../output/svg/fonts/tex/tex.js'; import '../ui/menu/menu.js'; import '../a11y/assistive-mml/assistive-mml.js'; import '../startup/startup.js';"},{"path":"/js/Mathjax/tex-mml-chtml/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'tex-mml-chtml', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/tex-mml-chtml/tex-mml-chtml.js","content":"import '../startup/init.js'; import './preload.js'; import '../core/core.js'; import '../input/tex/tex.js'; import '../input/mml/mml.js'; import '../output/chtml/chtml.js'; import '../output/chtml/fonts/tex/tex.js'; import '../ui/menu/menu.js'; import '../a11y/assistive-mml/assistive-mml.js'; import '../startup/startup.js';"},{"path":"/js/Mathjax/tex-mml-svg/preload.js","content":"import {Loader} from '../../../js/components/loader.js'; Loader.preLoad( 'loader', 'startup', 'core', 'input/tex', 'input/mml', 'output/svg', 'output/svg/fonts/tex.js', 'ui/menu', 'a11y/assistive-mml' );"},{"path":"/js/Mathjax/tex-svg/preload.js","content":"import {Loader} from '../../../js/components/loader.js'; Loader.preLoad( 'loader', 'startup', 'core', 'input/tex', 'output/svg', 'output/svg/fonts/tex.js', 'ui/menu', 'a11y/assistive-mml' );"},{"path":"/js/Mathjax/tex-svg/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'tex-svg', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/tex-svg-full/preload.js","content":"import {Loader} from '../../../js/components/loader.js'; Loader.preLoad( 'loader', 'startup', 'core', 'input/tex-full', 'output/svg', 'output/svg/fonts/tex.js', 'ui/menu', 'a11y/assistive-mml' );"},{"path":"/js/Mathjax/tex-svg-full/webpack.config.js","content":"const PACKAGE = require('../../webpack.common.js'); module.exports = PACKAGE( 'tex-svg-full', // the package to build '../../../js', // location of the MathJax js library [], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/input/asciimath/asciimath.js","content":"import './lib/asciimath.js'; import {AsciiMath} from '../../../../js/input/asciimath.js'; if (MathJax.startup) { MathJax.startup.registerConstructor('asciimath', AsciiMath); MathJax.startup.useInput('asciimath'); }"},{"path":"/js/Mathjax/tex-svg-full/tex-svg-full.js","content":"import '../startup/init.js'; import './preload.js'; import '../core/core.js'; import '../input/tex-full/tex-full.js'; import '../output/svg/svg.js'; import '../output/svg/fonts/tex/tex.js'; import '../ui/menu/menu.js'; import '../a11y/assistive-mml/assistive-mml.js'; import '../startup/startup.js';"},{"path":"/js/Mathjax/input/asciimath/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'input/asciimath', // the package to build '../../../../js', // location of the MathJax js library ['components/src/core/lib'], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/tex-svg/tex-svg.js","content":"import '../startup/init.js'; import './preload.js'; import '../core/core.js'; import '../input/tex/tex.js'; import '../output/svg/svg.js'; import '../output/svg/fonts/tex/tex.js'; import '../ui/menu/menu.js'; import '../a11y/assistive-mml/assistive-mml.js'; import '../startup/startup.js';"},{"path":"/js/Mathjax/adaptors/liteDOM/build.json","content":"{\"component\":\"adaptors/liteDOM\",\"targets\":[\"adaptors/liteAdaptor.ts\",\"adaptors/lite\"]}"},{"path":"/js/Mathjax/input/asciimath/build.json","content":"{\"component\":\"input/asciimath\",\"targets\":[\"input/asciimath.ts\",\"input/asciimath\"],\"excludeSubdirs\":\"true\"}"},{"path":"/js/Mathjax/adaptors/liteDOM/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'adaptors/liteDOM', // the package to build '../../../../js', // location of the MathJax js library ['components/src/core/lib'], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/input/tex-base/build.json","content":"{\"component\":\"input/tex-base\",\"targets\":[\"input/tex.ts\",\"input/tex\",\"input/tex/base\"],\"exclude\":[\"input/tex/AllPackages.ts\"],\"excludeSubdirs\":\"true\"}"},{"path":"/js/Mathjax/input/tex-base/tex-base.js","content":"import './lib/tex-base.js'; import {registerTeX} from '../tex/register.js'; registerTeX(['base']);"},{"path":"/js/Mathjax/input/mml/build.json","content":"{\"component\":\"input/mml\",\"targets\":[\"input/mathml.ts\",\"input/mathml\"],\"excludeSubdirs\":\"true\"}"},{"path":"/js/Mathjax/adaptors/liteDOM/liteDOM.js","content":"import './lib/liteDOM.js'; import {liteAdaptor} from '../../../../js/adaptors/liteAdaptor.js'; if (MathJax.startup) { MathJax.startup.registerConstructor('liteAdaptor', liteAdaptor); MathJax.startup.useAdaptor('liteAdaptor', true); }"},{"path":"/js/Mathjax/input/tex-full/build.json","content":"{\"component\":\"input/tex-full\",\"targets\":[\"input/tex.ts\",\"input/tex\"]}"},{"path":"/js/Mathjax/input/tex-full/tex-full.js","content":"import './lib/tex-full.js'; import '../tex/extensions/all-packages/all-packages.js'; import {registerTeX} from '../tex/register.js'; if (MathJax.loader) { MathJax.loader.preLoad( 'input/tex-base', '[tex]/all-packages' ); } registerTeX();"},{"path":"/js/Mathjax/input/tex-full/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex-full', // the package to build '../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/startup/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/mml/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'input/mml', // the package to build '../../../../js', // location of the MathJax js library ['components/src/core/lib'], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/input/mml/mml.js","content":"import './lib/mml.js'; import {MathML} from '../../../../js/input/mathml.js'; if (MathJax.startup) { MathJax.startup.registerConstructor('mml', MathML); MathJax.startup.useInput('mml'); } if (MathJax.loader) { // // Install a path-filter to cause loading of an entity file to load all entities, // since the individual files don't have individual components. // MathJax.loader.pathFilters.add((data) => { data.name = data.name.replace(/\\/util\\/entities\\/.*?\\.js/, '/input/mml/entities.js'); return true; }); }"},{"path":"/js/Mathjax/input/tex/tex.js","content":"import './lib/tex.js'; import {registerTeX} from './register.js'; import {Loader} from '../../../../js/components/loader.js'; Loader.preLoad( 'input/tex-base', '[tex]/ams', '[tex]/newcommand', '[tex]/noundefined', '[tex]/require', '[tex]/autoload', '[tex]/configmacros' ); registerTeX([ 'base', 'ams', 'newcommand', 'noundefined', 'require', 'autoload', 'configmacros' ]);"},{"path":"/js/Mathjax/input/tex/register.js","content":"import {insert} from '../../../../js/util/Options.js'; export function registerTeX(packageList = [], tex = true) { if (MathJax.startup) { if (tex) { MathJax.startup.registerConstructor('tex', MathJax._.input.tex_ts.TeX); MathJax.startup.useInput('tex'); } if (!MathJax.config.tex) { MathJax.config.tex = {}; } let packages = MathJax.config.tex.packages; MathJax.config.tex.packages = packageList; if (packages) { insert(MathJax.config.tex, {packages}); } } }"},{"path":"/js/Mathjax/input/tex/build.json","content":"{\"component\":\"input/tex\",\"targets\":[\"input/tex.ts\",\"input/tex\",\"input/tex/base\",\"input/tex/ams\",\"input/tex/newcommand\",\"input/tex/noundefined\",\"input/tex/require\",\"input/tex/autoload\",\"input/tex/configmacros\"],\"exclude\":[\"input/tex/AllPackages.ts\"],\"excludeSubdirs\":\"true\"}"},{"path":"/js/Mathjax/a11y/assistive-mml/assistive-mml.js","content":"import './lib/assistive-mml.js'; import {AssistiveMmlHandler} from '../../../../js/a11y/assistive-mml.js'; if (MathJax.startup) { MathJax.startup.extendHandler(handler => AssistiveMmlHandler(handler)); }"},{"path":"/js/Mathjax/a11y/assistive-mml/build.json","content":"{\"component\":\"a11y/assistive-mml\",\"targets\":[\"a11y/assistive-mml.ts\"]}"},{"path":"/js/Mathjax/a11y/complexity/complexity.js","content":"import './lib/complexity.js'; import {combineDefaults} from '../../../../js/components/global.js'; import {ComplexityHandler} from '../../../../js/a11y/complexity.js'; if (MathJax.startup) { MathJax.startup.extendHandler(handler => ComplexityHandler(handler)); combineDefaults(MathJax.config, 'options', MathJax.config['a11y/complexity'] || {}); }"},{"path":"/js/Mathjax/input/tex/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex', // the package to build '../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/startup/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/a11y/assistive-mml/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'a11y/assistive-mml', // the package to build '../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/mml/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/a11y/complexity/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'a11y/complexity', // the package to build '../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/a11y/semantic-enrich/lib', 'components/src/input/mml/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/a11y/explorer/build.json","content":"{\"component\":\"a11y/explorer\",\"targets\":[\"a11y/explorer.ts\",\"a11y/explorer\"]}"},{"path":"/js/Mathjax/a11y/explorer/explorer.js","content":"import './lib/explorer.js'; import {combineDefaults} from '../../../../js/components/global.js'; import {ExplorerHandler} from '../../../../js/a11y/explorer.js'; if (MathJax.startup) { MathJax.startup.extendHandler(handler => ExplorerHandler(handler)); }"},{"path":"/js/Mathjax/a11y/explorer/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'a11y/explorer', // the package to build '../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/ui/menu/lib', 'components/src/a11y/semantic-enrich/lib', 'components/src/a11y/sre/lib', 'components/src/input/mml/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/output/chtml/build.json","content":"{\"component\":\"output/chtml\",\"targets\":[\"output/chtml.ts\",\"output/chtml\",\"output/common\"],\"exclude\":[\"output/chtml/fonts\",\"output/common/fonts\"]}"},{"path":"/js/Mathjax/a11y/complexity/build.json","content":"{\"component\":\"a11y/complexity\",\"targets\":[\"a11y/complexity.ts\",\"a11y/complexity\",\"a11y/semantic-enrich.ts\"]}"},{"path":"/js/Mathjax/output/chtml/chtml.js","content":"import './lib/chtml.js'; import {combineDefaults} from '../../../../js/components/global.js'; import {CHTML} from '../../../../js/output/chtml.js'; if (MathJax.loader) { combineDefaults(MathJax.config.loader, 'output/chtml', { checkReady() { return MathJax.loader.load(\"output/chtml/fonts/tex\"); } }); } if (MathJax.startup) { MathJax.startup.registerConstructor('chtml', CHTML); MathJax.startup.useOutput('chtml'); }"},{"path":"/js/Mathjax/output/chtml/nofont.js","content":"import {FontData} from '../../../../js/output/chtml/FontData.js'; export class TeXFont extends FontData {}; TeXFont.OPTIONS = {fontURL: '.'};"},{"path":"/js/Mathjax/output/chtml/webpack.config.js","content":"const webpack = require(\"webpack\"); const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'output/chtml', // the package to build '../../../../js', // location of the MathJax js library ['components/src/core/lib'], // packages to link to __dirname // our directory ); module.exports.plugins.push( new webpack.NormalModuleReplacementPlugin( /\\/fonts\\/tex\\.js$/, function (resource) { resource.request = '../../components/src/output/chtml/nofont.js'; } ) );"},{"path":"/js/Mathjax/a11y/semantic-enrich/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'a11y/semantic-enrich', // the package to build '../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/mml/lib', 'components/src/core/lib', 'components/src/a11y/sre/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/a11y/semantic-enrich/semantic-enrich.js","content":"import './lib/semantic-enrich.js'; import {combineDefaults} from '../../../../js/components/global.js'; import Sre from '../../../../js/a11y/sre.js'; import {EnrichHandler} from '../../../../js/a11y/semantic-enrich.js'; import {MathML} from '../../../../js/input/mathml.js'; if (MathJax.loader) { combineDefaults(MathJax.config.loader, 'a11y/semantic-enrich', {checkReady: () => Sre.sreReady()}); } if (MathJax.startup) { MathJax.startup.extendHandler(handler => EnrichHandler(handler, new MathML())); }"},{"path":"/js/Mathjax/a11y/sre/build.json","content":"{\"component\":\"a11y/sre\",\"targets\":[\"a11y/sre.ts\"]}"},{"path":"/js/Mathjax/a11y/semantic-enrich/build.json","content":"{\"component\":\"a11y/semantic-enrich\",\"targets\":[\"a11y/semantic-enrich.ts\"]}"},{"path":"/js/Mathjax/input/tex-base/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex-base', // the package to build '../../../../js', // location of the MathJax js library ['components/src/core/lib'], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/ui/lazy/build.json","content":"{\"component\":\"ui/lazy\",\"targets\":[\"ui/lazy\"]}"},{"path":"/js/Mathjax/a11y/sre/sre.js","content":"import './lib/sre.js'; import './sre_config.js'; import Sre from '../../../../js/a11y/sre.js'; if (MathJax.startup) { ((typeof window !== 'undefined') ? window : global). SREfeature.custom = (loc) => Sre.preloadLocales(loc); }"},{"path":"/js/Mathjax/a11y/sre/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'a11y/sre', // the package to build '../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/mml/lib', 'components/src/core/lib', 'components/src/startup/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/a11y/sre/sre_config.js","content":"import {combineDefaults} from '../../../../js/components/global.js'; import {Package} from '../../../../js/components/package.js'; // This sets up the correct link to the mathmaps files. if (MathJax.startup) { let path = Package.resolvePath('[sre]', false); if (typeof window !== 'undefined') { window.SREfeature = {json: path}; } else { // In Node get the absolute path to the mathmaps directory. try { path = MathJax.config.loader.require.resolve( path + '/base.json').replace(/\\/base\\.json$/, ''); } catch(_err) { } global.SREfeature = {json: path}; } }"},{"path":"/js/Mathjax/ui/lazy/lazy.js","content":"import './lib/lazy.js'; import {LazyHandler} from '../../../../js/ui/lazy/LazyHandler.js'; if (MathJax.startup) { MathJax.startup.extendHandler(handler => LazyHandler(handler)); }"},{"path":"/js/Mathjax/ui/lazy/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'ui/lazy', // the package to build '../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/ui/menu/menu.js","content":"import './lib/menu.js'; import {MenuHandler} from '../../../../js/ui/menu/MenuHandler.js'; if (MathJax.startup && typeof window !== 'undefined') { MathJax.startup.extendHandler(handler => MenuHandler(handler), 20); }"},{"path":"/js/Mathjax/ui/menu/build.json","content":"{\"component\":\"ui/menu\",\"targets\":[\"ui/menu\"]}"},{"path":"/js/Mathjax/output/svg/build.json","content":"{\"component\":\"output/svg\",\"targets\":[\"output/svg.ts\",\"output/svg\",\"output/common\"],\"exclude\":[\"output/svg/fonts\",\"output/common/fonts\"]}"},{"path":"/js/Mathjax/ui/menu/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'ui/menu', // the package to build '../../../../js', // location of the MathJax js library ['components/src/core/lib', 'node_modules/mj-context-menu/js'], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/ui/safe/build.json","content":"{\"component\":\"ui/safe\",\"targets\":[\"ui/safe\"]}"},{"path":"/js/Mathjax/output/svg/nofont.js","content":"import {FontData} from '../../../../js/output/svg/FontData.js'; export class TeXFont extends FontData {}; TeXFont.OPTIONS = {fontURL: '.'};"},{"path":"/js/Mathjax/output/svg/svg.js","content":"import './lib/svg.js'; import {combineDefaults} from '../../../../js/components/global.js'; import {SVG} from '../../../../js/output/svg.js'; if (MathJax.loader) { combineDefaults(MathJax.config.loader, 'output/svg', { checkReady() { return MathJax.loader.load(\"output/svg/fonts/tex\"); } }); } if (MathJax.startup) { MathJax.startup.registerConstructor('svg', SVG); MathJax.startup.useOutput('svg'); }"},{"path":"/js/Mathjax/ui/safe/safe.js","content":"import './lib/safe.js'; import {SafeHandler} from '../../../../js/ui/safe/SafeHandler.js'; if (MathJax.startup && typeof window !== 'undefined') { MathJax.startup.extendHandler(handler => SafeHandler(handler)); }"},{"path":"/js/Mathjax/ui/safe/webpack.config.js","content":"const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'ui/safe', // the package to build '../../../../js', // location of the MathJax js library ['components/src/core/lib'], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/input/mml/entities/entities.js","content":"import '../../../../../js/util/entities/all.js';"},{"path":"/js/Mathjax/output/svg/webpack.config.js","content":"const webpack = require(\"webpack\"); const PACKAGE = require('../../../webpack.common.js'); module.exports = PACKAGE( 'output/svg', // the package to build '../../../../js', // location of the MathJax js library ['components/src/core/lib'], // packages to link to __dirname // our directory ); module.exports.plugins.push( new webpack.NormalModuleReplacementPlugin( /\\/fonts\\/tex\\.js$/, function (resource) { resource.request = '../../components/src/output/svg/nofont.js'; } ) );"},{"path":"/js/Mathjax/input/mml/extensions/mml3/build.json","content":"{\"id\":\"[mml]/mml3\",\"component\":\"input/mml/extensions/mml3\",\"targets\":[\"input/mathml/mml3\"]}"},{"path":"/js/Mathjax/input/mml/entities/webpack.config.js","content":"const PACKAGE = require('../../../../webpack.common.js'); module.exports = PACKAGE( 'input/mml/entities', // the package to build '../../../../../js', // location of the MathJax js library ['components/src/core/lib'], // packages to link to __dirname // our directory );"},{"path":"/js/Mathjax/input/mml/extensions/mml3/copy.json","content":"{\"to\":\"../../../../../../es5/input/mml/extensions\",\"from\":\"../../../../../../ts/input/mathml/mml3\",\"copy\":[\"mml3.sef.json\"]}"},{"path":"/js/Mathjax/input/mml/extensions/mml3/mml3.js","content":"import './lib/mml3.js'; import {Mml3Handler} from '../../../../../../js/input/mathml/mml3/mml3.js'; if (MathJax.startup) { MathJax.startup.extendHandler(handler => Mml3Handler(handler)); }"},{"path":"/js/Mathjax/input/mml/extensions/mml3/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/mml/extensions/mml3', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/mml/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/output/svg/fonts/tex/tex.js","content":"import './lib/tex.js'; import {TeXFont} from '../../../../../../js/output/svg/fonts/tex.js'; import {combineDefaults} from '../../../../../../js/components/global.js'; import {selectOptionsFromKeys} from '../../../../../../js/util/Options.js'; if (MathJax.startup) { const options = selectOptionsFromKeys(MathJax.config.svg || {}, TeXFont.OPTIONS); combineDefaults(MathJax.config, 'svg', {font: new TeXFont(options)}); }"},{"path":"/js/Mathjax/output/svg/fonts/tex/build.json","content":"{\"component\":\"output/svg/fonts/tex\",\"targets\":[\"output/svg/fonts/tex.ts\",\"output/svg/fonts/tex\",\"output/common/fonts/tex\"]}"},{"path":"/js/Mathjax/input/tex/extensions/ams/build.json","content":"{\"id\":\"[tex]/ams\",\"component\":\"input/tex/extensions/ams\",\"targets\":[\"input/tex/ams\"]}"},{"path":"/js/Mathjax/output/svg/fonts/tex/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'output/svg/fonts/tex', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/core/lib', 'components/src/output/svg/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/ams/ams.js","content":"import './lib/ams.js';"},{"path":"/js/Mathjax/input/tex/extensions/action/action.js","content":"import './lib/action.js';"},{"path":"/js/Mathjax/input/tex/extensions/ams/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/ams', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/action/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/action', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/output/chtml/fonts/tex/copy.json","content":"{\"to\":\"../../../../../../es5/output/chtml/fonts/woff-v2\",\"from\":\"../../../../../../ts/output/chtml/fonts/tex-woff-v2\",\"copy\":[\"MathJax_AMS-Regular.woff\",\"MathJax_Calligraphic-Bold.woff\",\"MathJax_Calligraphic-Regular.woff\",\"MathJax_Fraktur-Bold.woff\",\"MathJax_Fraktur-Regular.woff\",\"MathJax_Main-Bold.woff\",\"MathJax_Main-Italic.woff\",\"MathJax_Main-Regular.woff\",\"MathJax_Math-BoldItalic.woff\",\"MathJax_Math-Italic.woff\",\"MathJax_Math-Regular.woff\",\"MathJax_SansSerif-Bold.woff\",\"MathJax_SansSerif-Italic.woff\",\"MathJax_SansSerif-Regular.woff\",\"MathJax_Script-Regular.woff\",\"MathJax_Size1-Regular.woff\",\"MathJax_Size2-Regular.woff\",\"MathJax_Size3-Regular.woff\",\"MathJax_Size4-Regular.woff\",\"MathJax_Typewriter-Regular.woff\",\"MathJax_Vector-Bold.woff\",\"MathJax_Vector-Regular.woff\",\"MathJax_Zero.woff\"]}"},{"path":"/js/Mathjax/input/tex/extensions/all-packages/all-packages.js","content":"import './lib/all-packages.js'; import {AllPackages} from '../../../../../../js/input/tex/AllPackages.js'; import '../../../../../../js/input/tex/autoload/AutoloadConfiguration.js'; import '../../../../../../js/input/tex/require/RequireConfiguration.js'; import {registerTeX} from '../../register.js'; if (MathJax.loader) { MathJax.loader.preLoad('[tex]/autoload', '[tex]/require'); } registerTeX(['require', ...AllPackages], false);"},{"path":"/js/Mathjax/input/tex/extensions/action/build.json","content":"{\"id\":\"[tex]/action\",\"component\":\"input/tex/extensions/action\",\"targets\":[\"input/tex/action\"]}"},{"path":"/js/Mathjax/input/tex/extensions/all-packages/build.json","content":"{\"id\":\"[tex]/all-packages\",\"component\":\"input/tex/extensions/all-packages\",\"targets\":[\"input/tex/AllPackages.ts\",\"input/tex/autoload\",\"input/tex/require\"]}"},{"path":"/js/Mathjax/output/chtml/fonts/tex/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'output/chtml/fonts/tex', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/core/lib', 'components/src/output/chtml/lib', 'components/src/startup/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/output/chtml/fonts/tex/tex.js","content":"import './lib/tex.js'; import {combineDefaults} from '../../../../../../js/components/global.js'; import {Package} from '../../../../../../js/components/package.js'; import {selectOptionsFromKeys} from '../../../../../../js/util/Options.js'; import {TeXFont} from '../../../../../../js/output/chtml/fonts/tex.js'; if (MathJax.startup) { combineDefaults(MathJax.config, 'chtml', { fontURL: Package.resolvePath('output/chtml/fonts/woff-v2', false) }); const options = selectOptionsFromKeys(MathJax.config.chtml || {}, TeXFont.OPTIONS); combineDefaults(MathJax.config, 'chtml', {font: new TeXFont(options)}); }"},{"path":"/js/Mathjax/output/chtml/fonts/tex/build.json","content":"{\"component\":\"output/chtml/fonts/tex\",\"targets\":[\"output/chtml/fonts/tex.ts\",\"output/chtml/fonts/tex\",\"output/common/fonts/tex\"]}"},{"path":"/js/Mathjax/input/tex/extensions/autoload/autoload.js","content":"import './lib/autoload.js';"},{"path":"/js/Mathjax/input/tex/extensions/autoload/build.json","content":"{\"id\":\"[tex]/autoload\",\"component\":\"input/tex/extensions/autoload\",\"targets\":[\"input/tex/autoload\"]}"},{"path":"/js/Mathjax/input/tex/extensions/all-packages/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/all-packages',// the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/startup/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/autoload/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/autoload', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex/extensions/require/lib', 'components/src/input/tex-base/lib', 'components/src/startup/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/bbox/bbox.js","content":"import './lib/bbox.js';"},{"path":"/js/Mathjax/input/tex/extensions/bbox/build.json","content":"{\"id\":\"[tex]/bbox\",\"component\":\"input/tex/extensions/bbox\",\"targets\":[\"input/tex/bbox\"]}"},{"path":"/js/Mathjax/input/tex/extensions/amscd/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/amscd', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/bbox/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/bbox', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/braket/braket.js","content":"import './lib/braket.js';"},{"path":"/js/Mathjax/input/tex/extensions/amscd/amscd.js","content":"import './lib/amscd.js';"},{"path":"/js/Mathjax/input/tex/extensions/braket/build.json","content":"{\"id\":\"[tex]/braket\",\"component\":\"input/tex/extensions/braket\",\"targets\":[\"input/tex/braket\"]}"},{"path":"/js/Mathjax/input/tex/extensions/cancel/build.json","content":"{\"id\":\"[tex]/cancel\",\"component\":\"input/tex/extensions/cancel\",\"targets\":[\"input/tex/cancel\"]}"},{"path":"/js/Mathjax/input/tex/extensions/braket/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/braket', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/amscd/build.json","content":"{\"id\":\"[tex]/amscd\",\"component\":\"input/tex/extensions/amscd\",\"targets\":[\"input/tex/amscd\"]}"},{"path":"/js/Mathjax/input/tex/extensions/cancel/cancel.js","content":"import './lib/cancel.js';"},{"path":"/js/Mathjax/input/tex/extensions/cases/cases.js","content":"import './lib/cases.js';"},{"path":"/js/Mathjax/input/tex/extensions/cases/build.json","content":"{\"id\":\"[tex]/cases\",\"component\":\"input/tex/extensions/cases\",\"targets\":[\"input/tex/cases\"]}"},{"path":"/js/Mathjax/input/tex/extensions/cancel/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/cancel', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/input/tex/extensions/enclose/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/centernot/centernot.js","content":"import './lib/centernot.js';"},{"path":"/js/Mathjax/input/tex/extensions/centernot/build.json","content":"{\"id\":\"[tex]/centernot\",\"component\":\"input/tex/extensions/centernot\",\"targets\":[\"input/tex/centernot\"]}"},{"path":"/js/Mathjax/input/tex/extensions/cases/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/cases', // the package to build '../../../../../../js', // location of the compiled js files [ // packages to link to (relative to Mathjax components) 'components/src/input/tex-base/lib', 'components/src/input/tex/extensions/ams/lib', 'components/src/input/tex/extensions/empheq/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/centernot/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/centernot', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/colortbl/build.json","content":"{\"id\":\"[tex]/colortbl\",\"component\":\"input/tex/extensions/colortbl\",\"targets\":[\"input/tex/colortbl\"]}"},{"path":"/js/Mathjax/input/tex/extensions/colortbl/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/colortbl', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/colortbl/colortbl.js","content":"import './lib/colortbl.js';"},{"path":"/js/Mathjax/input/tex/extensions/colorv2/build.json","content":"{\"id\":\"[tex]/colorv2\",\"component\":\"input/tex/extensions/colorv2\",\"targets\":[\"input/tex/colorv2\"]}"},{"path":"/js/Mathjax/input/tex/extensions/color/build.json","content":"{\"id\":\"[tex]/color\",\"component\":\"input/tex/extensions/color\",\"targets\":[\"input/tex/color\"]}"},{"path":"/js/Mathjax/input/tex/extensions/colorv2/colorv2.js","content":"import './lib/colorv2.js';"},{"path":"/js/Mathjax/input/tex/extensions/color/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/color', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/empheq/build.json","content":"{\"id\":\"[tex]/empheq\",\"component\":\"input/tex/extensions/empheq\",\"targets\":[\"input/tex/empheq\"]}"},{"path":"/js/Mathjax/input/tex/extensions/colorv2/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/colorv2', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/color/color.js","content":"import './lib/color.js';"},{"path":"/js/Mathjax/input/tex/extensions/empheq/empheq.js","content":"import './lib/empheq.js';"},{"path":"/js/Mathjax/input/tex/extensions/empheq/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/empheq', // the package to build '../../../../../../js', // location of the compiled js files [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/configmacros/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/configmacros',// the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex/extensions/newcommand/lib', 'components/src/input/tex-base/lib', 'components/src/core/lib', 'components/src/startup/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/configmacros/build.json","content":"{\"id\":\"[tex]/configmacros\",\"component\":\"input/tex/extensions/configmacros\",\"targets\":[\"input/tex/configmacros\"]}"},{"path":"/js/Mathjax/input/tex/extensions/configmacros/configmacros.js","content":"import './lib/configmacros.js';"},{"path":"/js/Mathjax/input/tex/extensions/enclose/build.json","content":"{\"id\":\"[tex]/enclose\",\"component\":\"input/tex/extensions/enclose\",\"targets\":[\"input/tex/enclose\"]}"},{"path":"/js/Mathjax/input/tex/extensions/enclose/enclose.js","content":"import './lib/enclose.js';"},{"path":"/js/Mathjax/input/tex/extensions/gensymb/build.json","content":"{\"id\":\"[tex]/gensymb\",\"component\":\"input/tex/extensions/gensymb\",\"targets\":[\"input/tex/gensymb\"]}"},{"path":"/js/Mathjax/input/tex/extensions/extpfeil/extpfeil.js","content":"import './lib/extpfeil.js';"},{"path":"/js/Mathjax/input/tex/extensions/extpfeil/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/extpfeil', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex/extensions/ams/lib', 'components/src/input/tex/extensions/newcommand/lib', 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/gensymb/gensymb.js","content":"import './lib/gensymb.js';"},{"path":"/js/Mathjax/input/tex/extensions/enclose/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/enclose', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/extpfeil/build.json","content":"{\"id\":\"[tex]/extpfeil\",\"component\":\"input/tex/extensions/extpfeil\",\"targets\":[\"input/tex/extpfeil\"]}"},{"path":"/js/Mathjax/input/tex/extensions/gensymb/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/gensymb', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/boldsymbol/boldsymbol.js","content":"import './lib/boldsymbol.js';"},{"path":"/js/Mathjax/input/tex/extensions/boldsymbol/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/boldsymbol', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/html/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/html', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/html/html.js","content":"import './lib/html.js';"},{"path":"/js/Mathjax/input/tex/extensions/html/build.json","content":"{\"id\":\"[tex]/html\",\"component\":\"input/tex/extensions/html\",\"targets\":[\"input/tex/html\"]}"},{"path":"/js/Mathjax/input/tex/extensions/mathtools/build.json","content":"{\"id\":\"[tex]/mathtools\",\"component\":\"input/tex/extensions/mathtools\",\"targets\":[\"input/tex/mathtools\"]}"},{"path":"/js/Mathjax/input/tex/extensions/mathtools/mathtools.js","content":"import './lib/mathtools.js';"},{"path":"/js/Mathjax/input/tex/extensions/boldsymbol/build.json","content":"{\"id\":\"[tex]/boldsymbol\",\"component\":\"input/tex/extensions/boldsymbol\",\"targets\":[\"input/tex/boldsymbol\"]}"},{"path":"/js/Mathjax/input/tex/extensions/bussproofs/build.json","content":"{\"id\":\"[tex]/bussproofs\",\"component\":\"input/tex/extensions/bussproofs\",\"targets\":[\"input/tex/bussproofs\"]}"},{"path":"/js/Mathjax/input/tex/extensions/mathtools/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/mathtools', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex/extensions/ams/lib', 'components/src/input/tex/extensions/newcommand/lib', 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/bussproofs/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/bussproofs', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/bussproofs/bussproofs.js","content":"import './lib/bussproofs.js';"},{"path":"/js/Mathjax/input/tex/extensions/noerrors/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/noerrors', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/newcommand/newcommand.js","content":"import './lib/newcommand.js';"},{"path":"/js/Mathjax/input/tex/extensions/noerrors/build.json","content":"{\"id\":\"[tex]/noerrors\",\"component\":\"input/tex/extensions/noerrors\",\"targets\":[\"input/tex/noerrors\"]}"},{"path":"/js/Mathjax/input/tex/extensions/mhchem/build.json","content":"{\"id\":\"[tex]/mhchem\",\"component\":\"input/tex/extensions/mhchem\",\"targets\":[\"input/tex/mhchem\"],\"exclude\":[\"input/tex/mhchem/mhchem_parser.d.ts\"]}"},{"path":"/js/Mathjax/input/tex/extensions/noerrors/noerrors.js","content":"import './lib/noerrors.js';"},{"path":"/js/Mathjax/input/tex/extensions/mhchem/mhchem.js","content":"import './lib/mhchem.js';"},{"path":"/js/Mathjax/input/tex/extensions/mhchem/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/mhchem', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex/extensions/ams/lib', 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/newcommand/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/newcommand', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/require/build.json","content":"{\"id\":\"[tex]/require\",\"component\":\"input/tex/extensions/require\",\"targets\":[\"input/tex/require\"]}"},{"path":"/js/Mathjax/input/tex/extensions/require/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/require', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib', 'components/src/startup/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/newcommand/build.json","content":"{\"id\":\"[tex]/newcommand\",\"component\":\"input/tex/extensions/newcommand\",\"targets\":[\"input/tex/newcommand\"]}"},{"path":"/js/Mathjax/input/tex/extensions/noundefined/noundefined.js","content":"import './lib/noundefined.js';"},{"path":"/js/Mathjax/input/tex/extensions/require/require.js","content":"import './lib/require.js';"},{"path":"/js/Mathjax/input/tex/extensions/noundefined/build.json","content":"{\"id\":\"[tex]/noundefined\",\"component\":\"input/tex/extensions/noundefined\",\"targets\":[\"input/tex/noundefined\"]}"},{"path":"/js/Mathjax/input/tex/extensions/noundefined/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/noundefined', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/textcomp/textcomp.js","content":"import './lib/textcomp.js';"},{"path":"/js/Mathjax/input/tex/extensions/physics/build.json","content":"{\"id\":\"[tex]/physics\",\"component\":\"input/tex/extensions/physics\",\"targets\":[\"input/tex/physics\"]}"},{"path":"/js/Mathjax/input/tex/extensions/textcomp/build.json","content":"{\"id\":\"[tex]/textcomp\",\"component\":\"input/tex/extensions/textcomp\",\"targets\":[\"input/tex/textcomp\"]}"},{"path":"/js/Mathjax/input/tex/extensions/physics/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/physics', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/textcomp/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/textcomp', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex/extensions/textmacros/lib', 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/physics/physics.js","content":"import './lib/physics.js';"},{"path":"/js/Mathjax/input/tex/extensions/tagformat/build.json","content":"{\"id\":\"[tex]/tagformat\",\"component\":\"input/tex/extensions/tagformat\",\"targets\":[\"input/tex/tagformat\"]}"},{"path":"/js/Mathjax/input/tex/extensions/textmacros/build.json","content":"{\"id\":\"[tex]/textmacros\",\"component\":\"input/tex/extensions/textmacros\",\"targets\":[\"input/tex/textmacros\"]}"},{"path":"/js/Mathjax/input/tex/extensions/tagformat/tagformat.js","content":"import './lib/tagformat.js';"},{"path":"/js/Mathjax/input/tex/extensions/tagformat/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/tagformat', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/setoptions/setoptions.js","content":"import './lib/setoptions.js';"},{"path":"/js/Mathjax/input/tex/extensions/setoptions/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/setoptions', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/textmacros/textmacros.js","content":"import './lib/textmacros.js';"},{"path":"/js/Mathjax/input/tex/extensions/setoptions/build.json","content":"{\"id\":\"[tex]/setoptions\",\"component\":\"input/tex/extensions/setoptions\",\"targets\":[\"input/tex/setoptions\"]}"},{"path":"/js/Mathjax/input/tex/extensions/textmacros/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/textmacros', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/unicode/build.json","content":"{\"id\":\"[tex]/unicode\",\"component\":\"input/tex/extensions/unicode\",\"targets\":[\"input/tex/unicode\"]}"},{"path":"/js/Mathjax/input/tex/extensions/unicode/unicode.js","content":"import './lib/unicode.js';"},{"path":"/js/Mathjax/input/tex/extensions/upgreek/build.json","content":"{\"id\":\"[tex]/upgreek\",\"component\":\"input/tex/extensions/upgreek\",\"targets\":[\"input/tex/upgreek\"]}"},{"path":"/js/Mathjax/input/tex/extensions/upgreek/upgreek.js","content":"import './lib/upgreek.js';"},{"path":"/js/Mathjax/input/tex/extensions/upgreek/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/upgreek', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/verb/build.json","content":"{\"id\":\"[tex]/verb\",\"component\":\"input/tex/extensions/verb\",\"targets\":[\"input/tex/verb\"]}"},{"path":"/js/Mathjax/input/tex/extensions/unicode/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/unicode', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/verb/webpack.config.js","content":"const PACKAGE = require('../../../../../webpack.common.js'); module.exports = PACKAGE( 'input/tex/extensions/verb', // the package to build '../../../../../../js', // location of the MathJax js library [ // packages to link to 'components/src/input/tex-base/lib', 'components/src/core/lib' ], __dirname // our directory );"},{"path":"/js/Mathjax/input/tex/extensions/verb/verb.js","content":"import './lib/verb.js';"}]